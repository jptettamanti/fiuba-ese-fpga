    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Test del multiplicador
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Nombres de los registros
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s0, multiplicando
  LOGFORMAT-NAMEREG s0, multiplicando
INSTRUCTION-NAMEREG
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-multiplicando
  OP2 VALUE-multiplicando
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s1, multiplicador
  LOGFORMAT-NAMEREG s1, multiplicador
INSTRUCTION-NAMEREG
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-multiplicador
  OP2 VALUE-multiplicador
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s2, signo
  LOGFORMAT-NAMEREG s2, signo
INSTRUCTION-NAMEREG
   OPERAND1-s2
  OP1 VALUE-s2
   OPERAND2-signo
  OP2 VALUE-signo
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s3, resultado_alto
  LOGFORMAT-NAMEREG s3, resultado_alto
INSTRUCTION-NAMEREG
   OPERAND1-s3
  OP1 VALUE-s3
   OPERAND2-resultado_alto
  OP2 VALUE-resultado_alto
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s4, resultado_bajo
  LOGFORMAT-NAMEREG s4, resultado_bajo
INSTRUCTION-NAMEREG
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-resultado_bajo
  OP2 VALUE-resultado_bajo
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s5, semaforo_mult
  LOGFORMAT-NAMEREG s5, semaforo_mult
INSTRUCTION-NAMEREG
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-semaforo_mult
  OP2 VALUE-semaforo_mult
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s6, esperado_alto
  LOGFORMAT-NAMEREG s6, esperado_alto
INSTRUCTION-NAMEREG
   OPERAND1-s6
  OP1 VALUE-s6
   OPERAND2-esperado_alto
  OP2 VALUE-esperado_alto
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s7, esperado_bajo
  LOGFORMAT-NAMEREG s7, esperado_bajo
INSTRUCTION-NAMEREG
   OPERAND1-s7
  OP1 VALUE-s7
   OPERAND2-esperado_bajo
  OP2 VALUE-esperado_bajo
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-NAMEREG s8, esperado_ok
  LOGFORMAT-NAMEREG s8, esperado_ok
INSTRUCTION-NAMEREG
   OPERAND1-s8
  OP1 VALUE-s8
   OPERAND2-esperado_ok
  OP2 VALUE-esperado_ok
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Direcciones de registros
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Direcciones de los registros del multiplicador
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT n1, 01
  LOGFORMAT-CONSTANT n1, 01
INSTRUCTION-CONSTANT
   OPERAND1-n1
  OP1 VALUE-n1
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT n2, 02
  LOGFORMAT-CONSTANT n2, 02
INSTRUCTION-CONSTANT
   OPERAND1-n2
  OP1 VALUE-n2
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT sign, 03
  LOGFORMAT-CONSTANT sign, 03
INSTRUCTION-CONSTANT
   OPERAND1-sign
  OP1 VALUE-sign
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT rh, 04
  LOGFORMAT-CONSTANT rh, 04
INSTRUCTION-CONSTANT
   OPERAND1-rh
  OP1 VALUE-rh
   OPERAND2-04
  OP2 VALUE-04
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT rl, 05
  LOGFORMAT-CONSTANT rl, 05
INSTRUCTION-CONSTANT
   OPERAND1-rl
  OP1 VALUE-rl
   OPERAND2-05
  OP2 VALUE-05
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT led_sin_signo, 02
  LOGFORMAT-CONSTANT led_sin_signo, 02
INSTRUCTION-CONSTANT
   OPERAND1-led_sin_signo
  OP1 VALUE-led_sin_signo
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT led_con_signo, 03
  LOGFORMAT-CONSTANT led_con_signo, 03
INSTRUCTION-CONSTANT
   OPERAND1-led_con_signo
  OP1 VALUE-led_con_signo
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Programa principal
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-000
      LABEL-start
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-ENABLE INTERRUPT
  LOGFORMAT-ENABLE INTERRUPT
INSTRUCTION-ENABLE
   OPERAND1-INTERRUPT
  OP1 VALUE-INTERRUPT
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Habilito las interrupciones
    ADDRESS-001
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-001
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Test de multiplicacion SIN signo:
    ADDRESS-001
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-001
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Carga de registros de entrada
    ADDRESS-001
      LABEL-
  FORMATTED-LOAD multiplicando, F0
  LOGFORMAT-LOAD multiplicando[s0], F0
INSTRUCTION-LOAD
   OPERAND1-multiplicando
  OP1 VALUE-s0
   OPERAND2-F0
  OP2 VALUE-F0
    COMMENT-
    ADDRESS-002
      LABEL-
  FORMATTED-LOAD multiplicador, B2
  LOGFORMAT-LOAD multiplicador[s1], B2
INSTRUCTION-LOAD
   OPERAND1-multiplicador
  OP1 VALUE-s1
   OPERAND2-B2
  OP2 VALUE-B2
    COMMENT-
    ADDRESS-003
      LABEL-
  FORMATTED-LOAD signo, 00
  LOGFORMAT-LOAD signo[s2], 00
INSTRUCTION-LOAD
   OPERAND1-signo
  OP1 VALUE-s2
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-004
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Multiplico
    ADDRESS-004
      LABEL-
  FORMATTED-CALL multiply
  LOGFORMAT-CALL multiply[1B0]
INSTRUCTION-CALL
   OPERAND1-multiply
  OP1 VALUE-1B0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-005
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Verifico el resultado y enciendo un LED si fue satisfactorio
    ADDRESS-005
      LABEL-
  FORMATTED-LOAD esperado_alto, 00
  LOGFORMAT-LOAD esperado_alto[s6], 00
INSTRUCTION-LOAD
   OPERAND1-esperado_alto
  OP1 VALUE-s6
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-006
      LABEL-
  FORMATTED-LOAD esperado_bajo, 00
  LOGFORMAT-LOAD esperado_bajo[s7], 00
INSTRUCTION-LOAD
   OPERAND1-esperado_bajo
  OP1 VALUE-s7
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-007
      LABEL-
  FORMATTED-CALL verify
  LOGFORMAT-CALL verify[1B7]
INSTRUCTION-CALL
   OPERAND1-verify
  OP1 VALUE-1B7
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-008
      LABEL-
  FORMATTED-OUTPUT esperado_ok, led_sin_signo
  LOGFORMAT-OUTPUT esperado_ok[s8], led_sin_signo[02]
INSTRUCTION-OUTPUT
   OPERAND1-esperado_ok
  OP1 VALUE-s8
   OPERAND2-led_sin_signo
  OP2 VALUE-02
    COMMENT-
    ADDRESS-009
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-009
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Test de multiplicacion CON signo:
    ADDRESS-009
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-009
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Carga de registros de entrada
    ADDRESS-009
      LABEL-
  FORMATTED-LOAD multiplicando, F1
  LOGFORMAT-LOAD multiplicando[s0], F1
INSTRUCTION-LOAD
   OPERAND1-multiplicando
  OP1 VALUE-s0
   OPERAND2-F1
  OP2 VALUE-F1
    COMMENT-
    ADDRESS-00A
      LABEL-
  FORMATTED-LOAD multiplicador, 50
  LOGFORMAT-LOAD multiplicador[s1], 50
INSTRUCTION-LOAD
   OPERAND1-multiplicador
  OP1 VALUE-s1
   OPERAND2-50
  OP2 VALUE-50
    COMMENT-
    ADDRESS-00B
      LABEL-
  FORMATTED-LOAD signo, FF
  LOGFORMAT-LOAD signo[s2], FF
INSTRUCTION-LOAD
   OPERAND1-signo
  OP1 VALUE-s2
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-00C
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Multiplico
    ADDRESS-00C
      LABEL-
  FORMATTED-CALL multiply
  LOGFORMAT-CALL multiply[1B0]
INSTRUCTION-CALL
   OPERAND1-multiply
  OP1 VALUE-1B0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00D
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Verifico el resultado y enciendo un LED si fue satisfactorio
    ADDRESS-00D
      LABEL-
  FORMATTED-LOAD esperado_alto, 00
  LOGFORMAT-LOAD esperado_alto[s6], 00
INSTRUCTION-LOAD
   OPERAND1-esperado_alto
  OP1 VALUE-s6
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-00E
      LABEL-
  FORMATTED-LOAD esperado_bajo, 00
  LOGFORMAT-LOAD esperado_bajo[s7], 00
INSTRUCTION-LOAD
   OPERAND1-esperado_bajo
  OP1 VALUE-s7
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-00F
      LABEL-
  FORMATTED-CALL verify
  LOGFORMAT-CALL verify[1B7]
INSTRUCTION-CALL
   OPERAND1-verify
  OP1 VALUE-1B7
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-010
      LABEL-
  FORMATTED-OUTPUT esperado_ok, led_con_signo
  LOGFORMAT-OUTPUT esperado_ok[s8], led_con_signo[03]
INSTRUCTION-OUTPUT
   OPERAND1-esperado_ok
  OP1 VALUE-s8
   OPERAND2-led_con_signo
  OP2 VALUE-03
    COMMENT-
    ADDRESS-011
      LABEL-end
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-011
      LABEL-
  FORMATTED-JUMP end
  LOGFORMAT-JUMP end[011]
INSTRUCTION-JUMP
   OPERAND1-end
  OP1 VALUE-011
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-012
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; y enciendo un LED si el resultado fue satisfactorio
    ADDRESS-012
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-012
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Subrutina de multiplicacion
    ADDRESS-012
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-1B0
      LABEL-
  FORMATTED-ADDRESS 1B0
  LOGFORMAT-ADDRESS 1B0
INSTRUCTION-ADDRESS
   OPERAND1-1B0
  OP1 VALUE-1B0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-1B0
      LABEL-multiply
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-1B0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Escribo los operandos en los registros del multiplicador
    ADDRESS-1B0
      LABEL-
  FORMATTED-OUTPUT multiplicando, n1
  LOGFORMAT-OUTPUT multiplicando[s0], n1[01]
INSTRUCTION-OUTPUT
   OPERAND1-multiplicando
  OP1 VALUE-s0
   OPERAND2-n1
  OP2 VALUE-01
    COMMENT-
    ADDRESS-1B1
      LABEL-
  FORMATTED-OUTPUT multiplicador, n2
  LOGFORMAT-OUTPUT multiplicador[s1], n2[02]
INSTRUCTION-OUTPUT
   OPERAND1-multiplicador
  OP1 VALUE-s1
   OPERAND2-n2
  OP2 VALUE-02
    COMMENT-
    ADDRESS-1B2
      LABEL-
  FORMATTED-OUTPUT signo, sign
  LOGFORMAT-OUTPUT signo[s2], sign[03]
INSTRUCTION-OUTPUT
   OPERAND1-signo
  OP1 VALUE-s2
   OPERAND2-sign
  OP2 VALUE-03
    COMMENT-
    ADDRESS-1B3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Espero el resultado de la multiplicacion
    ADDRESS-1B3
      LABEL-mult_ready
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-1B3
      LABEL-
  FORMATTED-TEST semaforo_mult, 01
  LOGFORMAT-TEST semaforo_mult[s5], 01
INSTRUCTION-TEST
   OPERAND1-semaforo_mult
  OP1 VALUE-s5
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-; Intento tomar el semaforo
    ADDRESS-1B4
      LABEL-
  FORMATTED-JUMP NZ, mult_ready
  LOGFORMAT-JUMP NZ, mult_ready[1B3]
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-mult_ready
  OP2 VALUE-1B3
    COMMENT-; Si no puedo tomar el semaforo espero
    ADDRESS-1B5
      LABEL-
  FORMATTED-LOAD semaforo_mult, 00
  LOGFORMAT-LOAD semaforo_mult[s5], 00
INSTRUCTION-LOAD
   OPERAND1-semaforo_mult
  OP1 VALUE-s5
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-; Tomo el semaforo
    ADDRESS-1B6
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-1B7
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-1B7
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Subrutina de verificacion
    ADDRESS-1B7
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-1B7
      LABEL-verify
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-1B7
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Comparo el byte alto
    ADDRESS-1B7
      LABEL-
  FORMATTED-INPUT resultado_alto, rh
  LOGFORMAT-INPUT resultado_alto[s3], rh[04]
INSTRUCTION-INPUT
   OPERAND1-resultado_alto
  OP1 VALUE-s3
   OPERAND2-rh
  OP2 VALUE-04
    COMMENT-
    ADDRESS-1B8
      LABEL-
  FORMATTED-COMPARE resultado_alto, esperado_alto
  LOGFORMAT-COMPARE resultado_alto[s3], esperado_alto[s6]
INSTRUCTION-COMPARE
   OPERAND1-resultado_alto
  OP1 VALUE-s3
   OPERAND2-esperado_alto
  OP2 VALUE-s6
    COMMENT-
    ADDRESS-1B9
      LABEL-
  FORMATTED-JUMP NZ, nok
  LOGFORMAT-JUMP NZ, nok[1BE]
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-nok
  OP2 VALUE-1BE
    COMMENT-
    ADDRESS-1BA
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Comparo el byte bajo
    ADDRESS-1BA
      LABEL-
  FORMATTED-INPUT resultado_bajo, rh
  LOGFORMAT-INPUT resultado_bajo[s4], rh[04]
INSTRUCTION-INPUT
   OPERAND1-resultado_bajo
  OP1 VALUE-s4
   OPERAND2-rh
  OP2 VALUE-04
    COMMENT-
    ADDRESS-1BB
      LABEL-
  FORMATTED-COMPARE resultado_bajo, esperado_bajo
  LOGFORMAT-COMPARE resultado_bajo[s4], esperado_bajo[s7]
INSTRUCTION-COMPARE
   OPERAND1-resultado_bajo
  OP1 VALUE-s4
   OPERAND2-esperado_bajo
  OP2 VALUE-s7
    COMMENT-
    ADDRESS-1BC
      LABEL-
  FORMATTED-JUMP NZ, nok
  LOGFORMAT-JUMP NZ, nok[1BE]
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-nok
  OP2 VALUE-1BE
    COMMENT-
    ADDRESS-1BD
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Asigno el resultado de la comparacion
    ADDRESS-1BD
      LABEL-ok
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-1BD
      LABEL-
  FORMATTED-LOAD esperado_ok, 01
  LOGFORMAT-LOAD esperado_ok[s8], 01
INSTRUCTION-LOAD
   OPERAND1-esperado_ok
  OP1 VALUE-s8
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-1BE
      LABEL-nok
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-1BE
      LABEL-
  FORMATTED-LOAD esperado_ok, 00
  LOGFORMAT-LOAD esperado_ok[s8], 00
INSTRUCTION-LOAD
   OPERAND1-esperado_ok
  OP1 VALUE-s8
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-1BF
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-1C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-1C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Subrutina de interrupcion
    ADDRESS-1C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-2B0
      LABEL-
  FORMATTED-ADDRESS 2B0
  LOGFORMAT-ADDRESS 2B0
INSTRUCTION-ADDRESS
   OPERAND1-2B0
  OP1 VALUE-2B0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-2B0
      LABEL-int_call
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-2B0
      LABEL-
  FORMATTED-LOAD semaforo_mult, 01
  LOGFORMAT-LOAD semaforo_mult[s5], 01
INSTRUCTION-LOAD
   OPERAND1-semaforo_mult
  OP1 VALUE-s5
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-; Doy un semaforo de multiplicacion finalizada
    ADDRESS-2B1
      LABEL-
  FORMATTED-RETURNI ENABLE
  LOGFORMAT-RETURNI ENABLE
INSTRUCTION-RETURNI
   OPERAND1-ENABLE
  OP1 VALUE-ENABLE
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-2B2
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-2B2
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Configurar vector de interrupcion
    ADDRESS-2B2
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;************************************
    ADDRESS-3FF
      LABEL-
  FORMATTED-ADDRESS 3FF
  LOGFORMAT-ADDRESS 3FF
INSTRUCTION-ADDRESS
   OPERAND1-3FF
  OP1 VALUE-3FF
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-3FF
      LABEL-
  FORMATTED-JUMP int_call
  LOGFORMAT-JUMP int_call[2B0]
INSTRUCTION-JUMP
   OPERAND1-int_call
  OP1 VALUE-2B0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
